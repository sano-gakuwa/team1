@startuml

actor ユーザー
participant メイン
participant サブ
participant リスト
participant CSVファイル
participant 外部ファイル

== CSV読込 ==

ユーザー -> メイン : 「読込」を押下
activate ユーザー
activate メイン

メイン -> ユーザー : ファイルチューザー表示
ユーザー -> メイン : 読み込むファイルを選択
メイン -> ユーザー : 一覧画面を表示

メイン -> サブ : サブスレッドを立てる
activate サブ
サブ -> 外部ファイル : 選択した外部ファイルにロックをかける
    サブ->外部ファイル : エンジニア情報を読み取る
loop 入力形式チェック
    サブ->形式チェックリスト : 形式チェクリストにエンジニア情報を追加
    サブ->サブ : 入力形式のチェック（IDの重複確認など）
end

alt 入力形式エラー
    サブ->サブ : 形式違い
    サブ-->メイン :形式エラー
    サブ->形式チェックリスト : 形式チェックリストを削除
    メイン->サブ : サブスレッドを閉じる
    メイン->ユーザー : 形式違いエラーダイアログ
end

サブ -> CSVファイル : バックアップ用CSVファイルを作成
サブ-> CSVファイル :  CSVファイルにロックをかける
外部ファイル --> サブ : ファイルの内容を返す



alt エラーが発生した発生したとき
外部ファイル-->サブ : 読込の失敗
サブ->CSVファイル : 保存用CSVファイルを削除
サブ->CSVファイル : バックアップ用CSVファイルの名前を"employee_data.csv" に変更
サブ->CSVファイル : ロックの解除
サブ->メイン: 読込失敗
サブ->サブ : サブスレッドを閉じる
deactivate サブ
メイン->ユーザー : 読込失敗のダイアログ
end
activate サブ


activate サブ
サブ->リスト : 新たなエンジニア情報をリストに追加
サブ-> CSVファイル : バックアップ用 CSVファイルを削除
サブ->形式チェックリスト : 形式チェックリストを削除
サブ -> CSVファイル : ロックの解除

サブ -> メイン : 保存完了を渡す
サブ -> サブ : サブスレッドを閉じる
deactivate サブ
メイン -> ユーザー : 保存完了のダイアログ表示 一覧画面を表示する（更新）
deactivate メイン


